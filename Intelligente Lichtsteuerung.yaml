blueprint:
  name: Intelligent Light Control
  description: Flexible control of a target light through motion sensor, source light (optional), night mode, and other options.
  domain: automation
  input:
    target_light:
      name: Target Light
      description: The lamp to be controlled.
      selector:
        entity:
          domain: light

    motion_sensor:
      name: Motion Sensor
      description: The motion sensor that controls the target light in motion mode.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    motion_light_brightness:
      name: Brightness (Motion Sensor Mode)
      description: Brightness of the target light in motion mode (%).
      default: 100
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"

    motion_light_color_temp:
      name: Color Temperature (Motion Sensor Mode)
      description: Color temperature of the target light in motion mode.
      default: 274
      selector:
        number:
          min: 153
          max: 500

    motion_light_duration:
      name: Duration (Motion Sensor Mode)
      description: Time in seconds how long the light stays on when no motion is detected.
      default: 60
      selector:
        number:
          min: 1
          max: 3600
          unit_of_measurement: seconds

    sync_with_source:
      name: Enable Source Light Synchronization
      description: Should the target light adopt the settings of the source light?
      default: false
      selector:
        boolean: {}

    source_light:
      name: Source Light (optional)
      description: The light whose status and settings should be copied.
      selector:
        entity:
          domain: light

    enable_night_mode:
      name: Enable Night Mode
      description: Should night mode be activated?
      default: false
      selector:
        boolean: {}

    night_mode_color:
      name: Color (Night Mode)
      description: Color of the target light in night mode.
      default: [255, 153, 0]
      selector:
        color_rgb: {}

    night_mode_brightness:
      name: Brightness (Night Mode)
      description: Brightness of the target light in night mode (%).
      default: 30
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"

    night_mode_start:
      name: Night Mode Start Time
      description: Time when night mode should start.
      default: "22:00:00"
      selector:
        time: {}

    night_mode_end:
      name: Night Mode End Time
      description: Time when night mode should end.
      default: "06:00:00"
      selector:
        time: {}

trigger:
  - platform: state
    entity_id: !input motion_sensor
  - platform: state
    entity_id: !input source_light

variables:
  target_light: !input target_light
  motion_sensor: !input motion_sensor
  motion_light_brightness: !input motion_light_brightness
  motion_light_color_temp: !input motion_light_color_temp
  motion_light_duration: !input motion_light_duration
  enable_night_mode: !input enable_night_mode
  night_mode_color: !input night_mode_color
  night_mode_brightness: !input night_mode_brightness
  night_mode_start: !input night_mode_start
  night_mode_end: !input night_mode_end
  sync_with_source: !input sync_with_source
  source_light: !input source_light if !input sync_with_source else null

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ sync_with_source and source_light and is_state(source_light, 'on') }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness: "{{ state_attr(source_light, 'brightness') }}"
              rgb_color: "{{ state_attr(source_light, 'rgb_color') }}"

      - conditions:
          - condition: template
            value_template: "{{ not sync_with_source or (source_light and is_state(source_light, 'off')) }}"
          - condition: state
            entity_id: !input motion_sensor
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_pct: !input motion_light_brightness
              color_temp: !input motion_light_color_temp
          - wait_for_trigger:
              - platform: state
                entity_id: !input motion_sensor
                to: "off"
            timeout: !input motion_light_duration
            continue_on_timeout: true
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input motion_sensor
                    state: "off"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input target_light

    default:
      - service: light.turn_off
        target:
          entity_id: !input target_light

mode: restart
